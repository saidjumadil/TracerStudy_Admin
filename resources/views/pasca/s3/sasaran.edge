@layout('layout.layout')

@section('content')
<div class="card card-custom">
  <div class="card-header">
    <h3 class="card-title">
      <a href="{{route('admin.pasca.s3.index')}}" class="text-primary mr-3"><i
          class="far fa-arrow-alt-circle-left icon-xl text-primary"></i></a> Ubah Tahun Sasaran
    </h3>

  </div>
  <!--begin::Form-->
  <div class="card-body">
    <div class="alert alert-custom alert-outline-{{ (get_sasaran) ? 'info':'danger' }}" role="alert">
      <div class="alert-text text-justify">
        @if(get_sasaran)
        <h5>Sasaran : Tahun 
          {{ tahunSasaran ? getTitleSasaranTahun( tahunSasaran[0].tahun): '' }}
          Periode
          @each((data, index) in tahunSasaran)
          @if (index == 0) 
           {{ tahunSasaran ? getTitleSasaranPeriode( data.tahun): '' }}
          @else 
          , {{ tahunSasaran ? getTitleSasaranPeriode( data.tahun): '' }}
          @endif
          @endeach
        </h5>
        @else
        <h5>Tahun Sasaran Belum Ditentukan</h5>
        @endif
      </div>

    </div>
    <form method="POST" id="form">
      {{ csrfField() }}


      @!component('components/dropdown-range',{
      'name':'tahun',
      'label':'Tahun Sasaran',
      'required':true,
      'start': getCurrentYear(),
      'end':2015
      })

      @!component('components/checkboxSasaran',{
        'name':'periode',
        'label':'Periode Sasaran',
        'validasi':[false,false,false],
        'choice':[
        {id:1,nama:'Periode 1'},
        {id:2,nama:'Periode 2'},
        {id:3,nama:'Periode 3'},
        {id:4,nama:'Periode 4'},
        ]
      })

      <div class="text-right mt-5">
        <div class="btn btn-primary" data-toggle="modal" data-target="#modal_ubah_sasaran"><i
            class="fa fa-edit icon-sm"></i> Ubah</div>
      </div>
      <div class="modal fade" id="modal_ubah_sasaran" tabindex="-1" role="dialog"
        aria-labelledby="modal_label_ubah_sasaran" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modal_label_ubah_sasaran">Konfirmasi Sasaran </h5>

              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <i aria-hidden="true" class="ki ki-close"></i>
              </button>
            </div>

            <div class="modal-body" id='alert-sasaran'>
              <div class="alert alert-custom alert-outline-info" role="alert">
                <div class="alert-text text-justify">
                  <div><i class="fas fa-info-circle icon-sm text-info"></i> PERHATIAN</div>
                  <p>
                    Tahun Sasaran yang telah diubah tidak dapat diubah mundur kembali. Hanya mampu mengubah ke suatu
                    tahun sasaran yang sama sekali
                  </p>
                </div>

              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-light-primary font-weight-bold" data-dismiss="modal">Batal</button>
              <button id="ubah_sasaran" type="submit" class="btn btn-primary font-weight-bold"><i
                  class="fa fa-edit icon-sm"></i>
                Ubah </button>
            </div>
          </div>
        </div>
      </div>
    </form>
  </div>

  <!--end::Form-->
</div>

@endsection

@section('script')

<script>
  const sasaran = document.querySelector('#form')
  const alertSasaran = document.querySelector('#alert-sasaran')
  const sasaranBtn = document.querySelector('#ubah_sasaran')
  const csrfToken = document.querySelector('[name="_csrf"]').value
  const cekPopulasiRoute = '{{ appUrl()+cekPopulasiRoute }}'
  const getPopulasiRoute = '{{ appUrl()+getPopulasiRoute }}'
  const ubahSasaranRoute = '{{ appUrl()+ubahSasaranRoute }}'
  const tambahPopulasi = document.querySelector('#tambah_populasi')
  let loading = ['spinner', 'spinner-left', 'spinner-light', 'disabled'];

  let alert = (tipe, pesan) => {
    return `<div
    class="m-alert m-alert--outline alert alert-${tipe} alert-dismissible animated fadeIn"
    role="alert">
    <span>${pesan}</span>
    </div>`
  }

  let ubahSasaran = (data) => {
    
    fetch(ubahSasaranRoute, {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'x-csrf-token': csrfToken
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(data => {
        // console.log('berhasil')
        // console.log(location)
        if (data.isSuccess) {
          alertSasaran.removeChild(alertSasaran.childNodes[0]);
          alertSasaran.insertAdjacentHTML("afterbegin", alert('success',
            data.message))
          setTimeout(() => {

            window.location.replace(`{{ appUrl('tracer-study-admin/admin/pasca/s3') }}`);
          }, 1000);
        } else {
          alertSasaran.removeChild(alertSasaran.childNodes[0]);
          alertSasaran.insertAdjacentHTML("afterbegin", alert('danger',
          'Gagal mengubah karena sasaran sudah pernah dibuat!'))
        }

      })
  }

  sasaranBtn.addEventListener('click', (e) => {
    // console.log(loading)
    e.preventDefault()

    sasaranBtn.classList.add(...loading)
    const tahun = document.querySelector('[name="tahun"]').value
    const periode = [...document.querySelectorAll('[name="periode[]"]:checked')].map(e => e.value);
    
    let data = {
      tahun,
      periode
    }

    if (!tahun && periode.length == 0) {
      sasaranBtn.classList.remove(...loading)

      return
    }
    fetch(cekPopulasiRoute, {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'x-csrf-token': csrfToken
        },
        body: JSON.stringify({tahun, periode:0})
      })
      .then(response => response.json())
      .then(data => {
        if (data.get_populasi) {
          // console.log('ada data')
          ubahSasaran({
            tahun,
            periode
          })
        } else {
          // sasaran.insertAdjacentHTML("afterbegin", alert('danger', 'Data Populasi tidak ditemukan'))
          // $('#modal_tambah_populasi').modal('show')
          alertSasaran.removeChild(alertSasaran.childNodes[0]);
          alertSasaran.insertAdjacentHTML("afterbegin", alert('danger',
            `Data populasi S1 belum dimasukkan untuk tahun ${tahun}. tolong diimport terlebih dahulu pada Web Tracer S1 Laporan`
          ))
        }

        sasaranBtn.classList.remove(...loading)
      })
  })

</script>

@endsection
